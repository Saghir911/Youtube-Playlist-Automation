{"version":3,"file":"popup.ec3d596413653f66e248.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvCA","sources":["webpack://chrome-extension-boilerplate-react/./src/pages/Popup/Popup.tsx","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./popup.css\";\r\nvar URL_REGEX = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/.+$/;\r\nvar Popup = function () {\r\n    var _a = useState(\"\"), playlistUrl = _a[0], setPlaylistUrl = _a[1];\r\n    var _b = useState(\"\"), error = _b[0], setError = _b[1];\r\n    var _c = useState(false), isLoading = _c[0], setIsLoading = _c[1];\r\n    useEffect(function () {\r\n        if (error && URL_REGEX.test(playlistUrl)) {\r\n            setError(\"\");\r\n        }\r\n    }, [playlistUrl, error]);\r\n    var handleStartAutomation = function () {\r\n        if (!URL_REGEX.test(playlistUrl.trim())) {\r\n            setError(\"Invalid YouTube playlist URL.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n        // Background script or async logic\r\n        setTimeout(function () {\r\n            chrome.runtime.sendMessage();\r\n            console.log(\"Automation started for:\", playlistUrl);\r\n            setIsLoading(false);\r\n        }, 2000);\r\n    };\r\n    return (React.createElement(\"div\", { className: \"glass-card\" },\r\n        React.createElement(\"div\", { className: \"header\" },\r\n            React.createElement(\"div\", { className: \"logo-text\" },\r\n                \"YT\",\r\n                React.createElement(\"span\", { className: \"logo-accent\" }, \"Auto\"))),\r\n        React.createElement(\"div\", { className: \"input-group\" },\r\n            React.createElement(\"input\", { id: \"playlistUrl\", type: \"text\", value: playlistUrl, onChange: function (e) { return setPlaylistUrl(e.target.value); }, className: \"input \".concat(error ? 'shake' : ''), required: true }),\r\n            React.createElement(\"label\", { htmlFor: \"playlistUrl\", className: playlistUrl ? 'filled' : '' }, \"Paste playlist URL\"),\r\n            error && React.createElement(\"span\", { className: \"error-msg\" }, error)),\r\n        React.createElement(\"button\", { className: \"btn\", onClick: handleStartAutomation, disabled: isLoading },\r\n            React.createElement(\"span\", { className: \"btn-text\" }, isLoading ? 'Loading...' : 'Start Automation'),\r\n            React.createElement(\"div\", { className: \"ripple-container\" }))));\r\n};\r\nexport default Popup;\r\n","__webpack_require__.h = () => (\"f35efd1704be1877dc96\")"],"names":[],"sourceRoot":""}